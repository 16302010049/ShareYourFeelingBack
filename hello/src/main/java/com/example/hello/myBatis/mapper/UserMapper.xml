<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hello.UserMapper">

    <select id="findUserByUsername" parameterType="java.lang.String" resultType="com.example.hello.myBatis.po.User">
        select *
        from User
        where name = #{name}
    </select>

    <select id="findOtherByID" parameterType="Integer" resultType="com.example.hello.myBatis.po.Other">
        select id,
               name,
               sex,
               signature,
               imageurl,
               tags,
               blogNum,
               guanNum,
               fansNum,
               backgroundUrl
        from user
        where id = #{id}
    </select>

    <select id="findUserByID" parameterType="Integer" resultType="com.example.hello.myBatis.po.User">
        select *
        from user
        where id = #{id}
    </select>

    <select id="getPageUser" parameterType="Integer" resultType="com.example.hello.myBatis.po.Other">
        select id,
               name,
               sex,
               signature,
               imageurl,
               tags,
               blogNum,
               guanNum,
               fansNum,
               backgroundUrl
        from user
        where id != #{id}
    </select>

    <insert id="addUser" parameterType="com.example.hello.myBatis.po.User" useGeneratedKeys="true" keyProperty="id">
        insert into User(name, mailbox, sex, pass, birthday, signature, imageurl, tags, blogNum, guanNum, fansNum,
                         backgroundUrl)
        values (#{name}, #{mailbox}, #{sex}, #{pass}, #{birthday}, #{signature}, #{imageurl}, #{tags}, #{blogNum},
                #{guanNum}, #{fansNum}, #{backgroundUrl})
    </insert>

    <update id="updateUserBlogNum" parameterType="com.example.hello.myBatis.po.User">
        update user
        set blogNum = #{blogNum}
        where id = #{id}
    </update>

    <update id="updateUserGuanNum" parameterType="com.example.hello.myBatis.po.User">
        update user
        set guanNum = #{guanNum}
        where id = #{id}
    </update>

    <update id="updateUserFansNum" parameterType="com.example.hello.myBatis.po.User">
        update user
        set fansNum = #{fansNum}
        where id = #{id}
    </update>

    <update id="updateUserBackgroundUrl" parameterType="com.example.hello.myBatis.po.User">
        update user
        set backgroundUrl = #{backgroundUrl}
        where id = #{id}
    </update>

    <insert id="addBlog" parameterType="com.example.hello.myBatis.po.Blog" useGeneratedKeys="true" keyProperty="id">
        insert into blog(content, commentNum, tranNum, zanNum, authorID, date, imageList) VALUE (#{content},
                                                                                                 #{commentNum},
                                                                                                 #{tranNum}, #{zanNum},
                                                                                                 #{authorID}, #{date},
                                                                                                 #{imageList})
    </insert>

    <select id="selectBlogPage" resultType="com.example.hello.response.BlogResponse">
        select blog.id,
               content,
               commentNum,
               tranNum,
               zanNum,
               date,
               imageList,
               name,
               imageurl,
               user.id AS authorID
        from blog,
             user
        where user.id = authorID
    </select>

    <select id="selectBlogPageByBlogID" parameterType="Integer" resultType="com.example.hello.response.BlogResponse">
        select blog.id,
               content,
               commentNum,
               tranNum,
               zanNum,
               date,
               imageList,
               name,
               imageurl,
               user.id AS authorID
        from blog,
             user
        where blog.id = #{blogID}
          and user.id = authorID
    </select>

    <select id="searchBlogPage" parameterType="String" resultType="com.example.hello.response.BlogResponse">
        select blog.id,
               content,
               commentNum,
               tranNum,
               zanNum,
               date,
               imageList,
               name,
               imageurl,
               user.id AS authorID
        from blog,
             user
        where user.id = authorID
          and (locate(#{str}, content)
            or locate(#{str}, name))
    </select>

    <select id="selectUserBlog" parameterType="com.example.hello.request.GetUserBlogRequest"
            resultType="com.example.hello.response.BlogResponse">
        select blog.id,
               content,
               commentNum,
               tranNum,
               zanNum,
               date,
               imageList,
               name,
               imageurl,
               user.id AS authorID
        from blog,
             user
        where user.id = #{userID}
          and user.id = authorID
    </select>

    <select id="selectUserBlogReq" parameterType="com.example.hello.request.GetUserBlogRequest"
            resultType="com.example.hello.response.BlogResponse">
        select blog.id,
               content,
               commentNum,
               tranNum,
               zanNum,
               date,
               imageList,
               name,
               imageurl,
               user.id AS authorID
        from blog,
             user
        where user.id = #{userID}
          and user.id = authorID
          and locate(#{require}, content)
    </select>


    <insert id="addComment" parameterType="com.example.hello.request.AddCommentRequest" useGeneratedKeys="true"
            keyProperty="id">
        insert into comment(blogId, content, time, authorID) VALUE (#{blogId}, #{content}, #{time}, #{authorID})
    </insert>

    <select id="getPageComment" parameterType="Integer" resultType="com.example.hello.response.CommentResponse">
        select comment.id, blogId, content, time, authorID, name, imageurl
        from comment,
             user
        where user.id = comment.authorID
          and blogId = #{blogId}
    </select>

    <select id="getBlogByID" parameterType="Integer" resultType="com.example.hello.myBatis.po.Blog">
        select *
        from blog
        where id = #{blogid}
    </select>

    <update id="updateBlog" parameterType="com.example.hello.myBatis.po.Blog">
        update blog
        set content    = #{content},
            commentNum = #{commentNum},
            tranNum    = #{tranNum},
            zanNum=#{zanNum},
            date       = #{date},
            imageList  = #{imageList},
            authorID   = #{authorID}
        where id = #{id}
    </update>

    <insert id="addCollect" parameterType="com.example.hello.request.AddCollectRequest" useGeneratedKeys="true"
            keyProperty="id">
        insert into collect(userID, blogID, time) VALUE (#{userID}, #{blogID}, #{time})
    </insert>

    <select id="checkCollect" parameterType="com.example.hello.request.CheckCollectRequest"
            resultType="com.example.hello.myBatis.po.Collect">
        select *
        from collect
        where blogID = #{blogID}
          and userID = #{userID}
    </select>

    <delete id="deleteCollect" parameterType="com.example.hello.request.DelectCollectRequest">
        delete
        from collect
        where userID = #{userID}
          and blogID = #{blogID}
    </delete>

    <delete id="deleteComment" parameterType="Integer">
        delete
        from comment
        where id = #{commentID}
    </delete>

    <insert id="addThumbsUp" parameterType="com.example.hello.request.AddThumbsUpRequest" useGeneratedKeys="true"
            keyProperty="id">
        insert into thumbs_up(blogID, userID) VALUE (#{blogID}, #{userID})
    </insert>

    <select id="checkThumbsUp" parameterType="com.example.hello.request.CheckThumbsUpRequest"
            resultType="com.example.hello.myBatis.po.ThumbsUp">
        select *
        from thumbs_up
        where blogID = #{blogID}
          and userID = #{userID}
    </select>

    <delete id="deleteThumbsUp" parameterType="com.example.hello.request.DeleteThumbsUpRequest">
        delete
        from thumbs_up
        where userID = #{userID}
          and blogID = #{blogID}
    </delete>

    <delete id="deleteCollectByBlogID" parameterType="Integer">
        delete
        from collect
        where blogID = #{blogID}
    </delete>

    <delete id="deleteThumbsUpByBlogID" parameterType="Integer">
        delete
        from thumbs_up
        where blogID = #{blogID}
    </delete>

    <delete id="deleteCommentByBlogID" parameterType="Integer">
        delete
        from comment
        where blogId = #{blogID}
    </delete>

    <delete id="deleteBlogByBlogID" parameterType="Integer">
        delete
        from blog
        where id = #{blogID}
    </delete>

    <select id="getPageUserByTags" parameterType="com.example.hello.request.GetPageTagUserRequest"
            resultType="com.example.hello.myBatis.po.Other">
        select id,
               name,
               sex,
               signature,
               imageurl,
               tags,
               blogNum,
               guanNum,
               fansNum,
               backgroundUrl
        from user
        where id != #{userID}
          and JSON_CONTAINS(tags, #{tags})
    </select>

    <select id="checkFollow" parameterType="com.example.hello.request.CheckFollowRequest"
            resultType="com.example.hello.myBatis.po.Follow">
        select *
        from follow
        where followerID = #{followerID}
          and followID = #{followID}
    </select>

    <insert id="addFollow" parameterType="com.example.hello.request.AddFollowRequest" useGeneratedKeys="true"
            keyProperty="id">
        insert into follow(followerID, followID, time) VALUE (#{followerID}, #{followID}, #{time})
    </insert>

    <delete id="deleteFollow" parameterType="com.example.hello.request.DeleteFollowRequest">
        delete
        from follow
        where followerID = #{followerID}
          and followID = #{followID}
    </delete>

    <update id="editMyInfo" parameterType="com.example.hello.myBatis.po.User">
        update user
        set name      = #{name},
            mailbox   = #{mailbox},
            sex       = #{sex},
            pass      = #{pass},
            birthday  = #{birthday},
            signature = #{signature},
            imageurl  = #{imageurl},
            tags      = #{tags}
        where id = #{id}
    </update>

    <select id="getFollow" parameterType="Integer" resultType="com.example.hello.myBatis.po.Other">
        select user.id,
               name,
               sex,
               signature,
               imageurl,
               tags,
               blogNum,
               guanNum,
               fansNum,
               backgroundUrl
        from user,
             follow
        where followerID = #{userID}
          and followID = user.id
    </select>

    <select id="getFollowStr" parameterType="com.example.hello.request.GetFollowPageRequest"
            resultType="com.example.hello.myBatis.po.Other">
        select user.id,
               name,
               sex,
               signature,
               imageurl,
               tags,
               blogNum,
               guanNum,
               fansNum,
               backgroundUrl
        from user,
             follow
        where followerID = #{userID}
          and followID = user.id
          and LOCATE(#{str}, name)
    </select>

    <select id="getFans" parameterType="Integer" resultType="com.example.hello.myBatis.po.Other">
        select user.id,
               name,
               sex,
               signature,
               imageurl,
               tags,
               blogNum,
               guanNum,
               fansNum,
               backgroundUrl
        from user,
             follow
        where followID = #{userID}
          and followerID = user.id
    </select>

    <select id="getFansStr" parameterType="com.example.hello.request.GetFansPageRequest"
            resultType="com.example.hello.myBatis.po.Other">
        select user.id,
               name,
               sex,
               signature,
               imageurl,
               tags,
               blogNum,
               guanNum,
               fansNum,
               backgroundUrl
        from user,
             follow
        where followID = #{userID}
          and followerID = user.id
          and LOCATE(#{str}, name)
    </select>


    <select id="getCollect" parameterType="com.example.hello.request.GetCollectRequest"
            resultType="com.example.hello.response.BlogResponse">
        select blog.id,
               content,
               commentNum,
               tranNum,
               zanNum,
               date,
               imageList,
               name,
               imageurl,
               user.id AS authorID
        from blog,
             user,
             collect
        where collect.userID = #{userID}
          and collect.blogID = blog.id
          and user.id = blog.authorID
    </select>

    <select id="getCollectStr" parameterType="com.example.hello.request.GetCollectRequest"
            resultType="com.example.hello.response.BlogResponse">
        select blog.id,
               content,
               commentNum,
               tranNum,
               zanNum,
               date,
               imageList,
               name,
               imageurl,
               user.id AS authorID
        from blog,
             user,
             collect
        where collect.userID = #{userID}
          and collect.blogID = blog.id
          and LOCATE(#{str},blog.content)
          and user.id = blog.authorID
    </select>

    <select id="getChatList" parameterType="com.example.hello.request.GetCollectRequest" resultType="com.example.hello.myBatis.po.Other">
        select distinct user.id,
               name,
               sex,
               signature,
               imageurl,
               tags,
               blogNum,
               guanNum,
               fansNum,
               backgroundUrl
       from user , follow
       where (followID = #{userID} and followerID = user.id) or (followerID = #{userID} and followID = user.id)
    </select>

    <select id="getChatListStr" parameterType="com.example.hello.request.GetCollectRequest" resultType="com.example.hello.myBatis.po.Other">
        select distinct user.id,
                        name,
                        sex,
                        signature,
                        imageurl,
                        tags,
                        blogNum,
                        guanNum,
                        fansNum,
                        backgroundUrl
        from user , follow
        where ((followID = #{userID} and followerID = user.id) or (followerID = #{userID} and followID = user.id)) and LOCATE(#{str},name)
    </select>

</mapper>